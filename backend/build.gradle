buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}


group = 'org.ftclub'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
    set('springCloudVersion', "2021.0.8")
    snippetsDir = file('build/generated-snippets')
    snippetsDir.mkdirs()
    outputDocs = file('src/main/resources/static/docs')
}

test {
    outputs.dir snippetsDir
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    // spring-boot
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    runtimeOnly 'org.apache.logging.log4j:log4j-spring-boot'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation 'org.modelmapper:modelmapper:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // spring-cloud - openfeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // slack
    implementation group: 'com.slack.api', name: 'slack-api-client', version: '1.30.0'
    implementation("com.slack.api:bolt-jetty:1.30.0")


    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"

    // Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-core:1.11.2'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // authorization
    implementation 'com.github.scribejava:scribejava-apis:8.3.3'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.9'


    // test
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.9.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    testImplementation 'org.modelmapper:modelmapper:3.1.1'
    testRuntimeOnly 'com.h2database:h2'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


tasks.register('copyMainConfig', Copy) {
    from '../config/backend/src/main/resources'
    into 'src/main/resources'
}

tasks.named('processResources') {
    dependsOn 'copyMainConfig'
}

tasks.named('compileJava') {
    dependsOn 'compileQuerydsl'
}


test {
    outputs.dir snippetsDir
    useJUnitPlatform()
    failFast = true
    systemProperty 'spring.profiles.active', 'test'
}

asciidoctor {
    dependsOn test
    baseDirFollowsSourceDir()
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
}
//
//tasks.register('copyDocument', Copy) {
//    dependsOn asciidoctor
//    from file("${asciidoctor.outputDir}")
//    into file("${outputDocs}")
//}

build {
//    dependsOn copyDocument
}

jar {
    enabled = false
}

bootJar {
    dependsOn asciidoctor
    copy {
        from("${asciidoctor.outputDir}")
        into 'build/classes/static'
    }

    def querydslDir = "$buildDir/generated/querydsl"
    querydsl {
        jpa = true
        querydslSourcesDir = querydslDir
    }
    sourceSets {
        main.java.srcDir querydslDir
    }
    configurations {
        querydsl.extendsFrom compileClasspath
    }
    compileQuerydsl {
        options.annotationProcessorPath = configurations.querydsl
    }

}